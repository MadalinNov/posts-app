{"version":3,"sources":["Components/Card/Card.js","Components/Button/Button.js","Components/Post/Post.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","useState","file","postHead","setPostHead","cardTitle","setCardTitle","cardDescription","setCardDescription","getKeyDown","setKeyDown","hearts","setHearts","follows","setFollows","likes","setLikes","stars","setStars","className","type","onChange","e","URL","createObjectURL","target","files","src","alt","onClick","value","placeholder","console","log","prevState","removePost","Button","newPostHandler","Post","newPost","setNewPost","removePostHandler","postsArr","newValue","concat","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f21140a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Card.css\";\r\nconst Card = (props) => {\r\n  const [postHead, setPostHead] = useState({\r\n    file: null,\r\n  });\r\n  const [cardTitle, setCardTitle] = useState();\r\n  const [cardDescription, setCardDescription] = useState();\r\n  const uploadImageHandler = (e) => {\r\n    setPostHead({\r\n      file: URL.createObjectURL(e.target.files[0]),\r\n    });\r\n  };\r\n  const removeImageHandler = () => {\r\n    setPostHead({\r\n      file: null,\r\n    });\r\n  };\r\n  let [getKeyDown, setKeyDown] = useState(false);\r\n  /////////////stats/////////\r\n  let [hearts, setHearts] = useState(0);\r\n  let [follows, setFollows] = useState(0);\r\n  let [likes, setLikes] = useState(0);\r\n  let [stars, setStars] = useState(0);\r\n  ///////card info\r\n  ////tile\r\n  const cardTitleHandler = (e) => {\r\n    setCardTitle(e.target.value);\r\n  };\r\n  ///description\r\n  const descriptionHandler = (e) => {\r\n    setCardDescription(e.target.value);\r\n    console.log(cardDescription);\r\n  };\r\n\r\n  const keyDownHandler = (e) => {\r\n    setKeyDown(!getKeyDown);\r\n  };\r\n  return (\r\n    <div className=\"Card\">\r\n      <div className=\"Card--head\">\r\n        <input\r\n          type=\"file\"\r\n          onChange={uploadImageHandler}\r\n          className={getKeyDown ? \"input--hidden\" : \"input\"}\r\n        />\r\n        <img\r\n          className={postHead.file === null ? \"input--hidden\" : \"img\"}\r\n          src={postHead.file}\r\n          alt=\"\"\r\n        />\r\n        <button\r\n          className={getKeyDown ? \"input--hidden\" : \"Remove--image--btn\"}\r\n          onClick={removeImageHandler}\r\n        >\r\n          <i className={\"fas fa-minus-circle\"}></i>\r\n        </button>\r\n      </div>\r\n      <div className=\"Card--body\">\r\n        <div className={getKeyDown ? \"Card--info--center\" : \"Card--info\"}>\r\n          <button\r\n            onClick={keyDownHandler}\r\n            className={getKeyDown ? \"input--hidden\" : \"save--btn\"}\r\n          >\r\n            Save\r\n          </button>\r\n          <input\r\n            className={getKeyDown ? \"input--hidden\" : \"input\"}\r\n            type=\"text\"\r\n            onChange={cardTitleHandler}\r\n            placeholder=\"Title\"\r\n          />\r\n          <h1>{cardTitle}</h1>\r\n          <input\r\n            className={getKeyDown ? \"input--hidden\" : \"input\"}\r\n            type=\"text\"\r\n            onChange={descriptionHandler}\r\n            placeholder=\"Description\"\r\n          />\r\n          <p>{cardDescription}</p>\r\n        </div>\r\n        <div className=\"Emotes\">\r\n          <button\r\n            onClick={() => {\r\n              setHearts((prevState) => {\r\n                return (hearts = prevState + 1);\r\n              });\r\n            }}\r\n          >\r\n            {hearts}\r\n            <i className=\"fas fa-heart\"></i>\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setFollows((prevState) => {\r\n                return (follows = prevState + 1);\r\n              });\r\n            }}\r\n          >\r\n            {follows}\r\n            <i className=\"fas fa-eye\"></i>\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setLikes((prevState) => {\r\n                return (likes = prevState + 1);\r\n              });\r\n            }}\r\n          >\r\n            {likes}\r\n            <i className=\"fas fa-thumbs-up\"></i>\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setStars((prevState) => {\r\n                return (stars = prevState + 1);\r\n              });\r\n            }}\r\n          >\r\n            {stars}\r\n            <i className=\"fas fa-star\"></i>\r\n          </button>\r\n        </div>\r\n        <button onClick={props.removePost} className={\"Remove--btn\"}>\r\n          Remove\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./Button.css\";\r\nconst Button = (props) => {\r\n  return (\r\n    <button className=\"Global--btn\" onClick={props.newPostHandler}>\r\n      Add New Post\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Card from \"../Card/Card\";\r\nimport \"./Post.css\";\r\nimport Button from \"..//Button/Button\";\r\nconst Post = () => {\r\n  const [newPost, setNewPost] = useState([]);\r\n\r\n  const newPostHandler = () => {\r\n    const newValue = newPost.concat(<Card removePost={removePostHandler} />);\r\n    return setNewPost(newValue);\r\n  };\r\n  const removePostHandler = (e) => {\r\n    const postsArr = [...newPost];\r\n    setNewPost(postsArr);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Post\">\r\n      <h1>Your daily posts page</h1>\r\n      <Button newPostHandler={newPostHandler} />\r\n      <div className=\"Cards--container\">{newPost}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default Post;\r\n","import \"./App.css\";\nimport Post from \"./Components/Post/Post\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Post />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}